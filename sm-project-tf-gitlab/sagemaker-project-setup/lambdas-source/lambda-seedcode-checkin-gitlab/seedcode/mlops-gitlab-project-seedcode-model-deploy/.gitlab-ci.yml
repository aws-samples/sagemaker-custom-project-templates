image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  SAGEMAKER_PROJECT_NAME_ID: "$SAGEMAKER_PROJECT_NAME-$SAGEMAKER_PROJECT_ID"
  EXPORT_TEMPLATE_NAME: "template-export.yml"
  EXPORT_TEMPLATE_STAGING_CONFIG: "staging-config-export.json"
  EXPORT_TEMPLATE_STAGING_PARAMS: "staging-params-export.json"
  EXPORT_TEMPLATE_STAGING_TAGS: "staging-tags-export.json"
  EXPORT_TEMPLATE_PROD_CONFIG: "prod-config-export.json"
  EXPORT_TEMPLATE_PROD_PARAMS: "prod-params-export.json"
  EXPORT_TEMPLATE_PROD_TAGS: "prod-tags-export.json"
  EXPORT_TEST_RESULTS: "test-results.json"
  STACK_NAME_DEPLOY_STAGING: "sagemaker-${SAGEMAKER_PROJECT_NAME}-${SAGEMAKER_PROJECT_ID}-deploy-staging"
  STACK_NAME_DEPLOY_PROD: "sagemaker-${SAGEMAKER_PROJECT_NAME}-${SAGEMAKER_PROJECT_ID}-deploy-prod"  


before_script:
  - apk add --no-cache python3 py3-pip
  - python -V 
  - apk add jq
  - terraform --version
  - jq --version
  - pip install --upgrade --force-reinstall "botocore>1.21.30" "boto3>1.18.30" "awscli>1.20.30" --ignore-installed six --user
  - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}  

stages:          
  - build
  - staging deploy
  - test staging
  - production deploy

build_job:       
  stage: build
  script:
    - python build.py --region "$AWS_REGION" --model-execution-role "$SAGEMAKER_PIPELINE_ROLE_ARN" --model-package-group-name "$SAGEMAKER_PROJECT_NAME_ID" --sagemaker-project-id "$SAGEMAKER_PROJECT_ID" --sagemaker-project-name "$SAGEMAKER_PROJECT_NAME" --export-staging-config $EXPORT_TEMPLATE_STAGING_CONFIG --export-prod-config $EXPORT_TEMPLATE_PROD_CONFIG --sagemaker-project-arn "$SAGEMAKER_PROJECT_ARN"
    - cat $EXPORT_TEMPLATE_STAGING_CONFIG
    - cat $EXPORT_TEMPLATE_PROD_CONFIG
  artifacts:
    paths:
      - $EXPORT_TEMPLATE_STAGING_CONFIG
      - $EXPORT_TEMPLATE_STAGING_PARAMS
      - $EXPORT_TEMPLATE_STAGING_TAGS
      - $EXPORT_TEMPLATE_PROD_CONFIG
      - $EXPORT_TEMPLATE_PROD_PARAMS
      - $EXPORT_TEMPLATE_PROD_TAGS

staging_deploy:  
  stage: staging deploy 
  dependencies: 
    - build_job
  script:
    - echo "Deploying model to SageMaker Endpoint..."  
    - export TF_VAR_sagemaker_project_name=`cat $EXPORT_TEMPLATE_STAGING_CONFIG | jq -r ".Parameters.SageMakerProjectName"`    
    - export TF_VAR_sagemaker_project_id=`cat $EXPORT_TEMPLATE_STAGING_CONFIG | jq -r '.Tags' | jq -r '.["sagemaker:project-id"]'`
    - export TF_VAR_model_exec_role_arn=`cat $EXPORT_TEMPLATE_STAGING_CONFIG | jq -r ".Parameters.ModelExecutionRoleArn"`
    - export TF_VAR_model_registry_artifact=`cat $EXPORT_TEMPLATE_STAGING_CONFIG | jq -r ".Parameters.ModelRegistryArtifact"`   
    - export TF_VAR_model_inference_image=`cat $EXPORT_TEMPLATE_STAGING_CONFIG | jq -r ".Parameters.ModelImageURI"`    
    - export TF_VAR_endpoint_instance_count=`cat $EXPORT_TEMPLATE_STAGING_CONFIG | jq -r ".Parameters.EndpointInstanceCount"`       
    - export TF_VAR_endpoint_instance_type=`cat $EXPORT_TEMPLATE_STAGING_CONFIG | jq -r ".Parameters.EndpointInstanceType"`       
    - export TF_VAR_endpoint_stage_name=`cat $EXPORT_TEMPLATE_STAGING_CONFIG | jq -r ".Parameters.StageName"`   
    - cd terraform-package   
    - echo $TF_VAR_model_exec_role_arn 
    - terraform init
    - terraform plan
    - terraform apply -auto-approve 

test_staging:
  stage: test staging
  script:
    - echo "Linting code... This will take about 10 seconds."
    - echo "No lint issues found."

production_deploy:      
  stage: production deploy
  dependencies: 
    - build_job
  script:
    - echo "Deploying model to SageMaker Endpoint..."
    - export TF_VAR_sagemaker_project_name=`cat $EXPORT_TEMPLATE_PROD_CONFIG | jq -r ".Parameters.SageMakerProjectName"`    
    - export TF_VAR_sagemaker_project_id=`cat $EXPORT_TEMPLATE_PROD_CONFIG | jq -r '.Tags' | jq -r '.["sagemaker:project-id"]'`
    - export TF_VAR_model_exec_role_arn=`cat $EXPORT_TEMPLATE_PROD_CONFIG | jq -r ".Parameters.ModelExecutionRoleArn"`
    - export TF_VAR_model_registry_artifact=`cat $EXPORT_TEMPLATE_PROD_CONFIG | jq -r ".Parameters.ModelRegistryArtifact"`   
    - export TF_VAR_model_inference_image=`cat $EXPORT_TEMPLATE_PROD_CONFIG | jq -r ".Parameters.ModelImageURI"`    
    - export TF_VAR_endpoint_instance_count=`cat $EXPORT_TEMPLATE_PROD_CONFIG | jq -r ".Parameters.EndpointInstanceCount"`       
    - export TF_VAR_endpoint_instance_type=`cat $EXPORT_TEMPLATE_PROD_CONFIG | jq -r ".Parameters.EndpointInstanceType"`       
    - export TF_VAR_endpoint_stage_name=`cat $EXPORT_TEMPLATE_PROD_CONFIG | jq -r ".Parameters.StageName"`       
    - cd terraform-package    
    - terraform init
    - terraform plan
    - terraform apply -auto-approve 
  when: manual
