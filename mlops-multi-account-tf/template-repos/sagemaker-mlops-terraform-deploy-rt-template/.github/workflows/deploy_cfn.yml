# name: Deploy Inference Infrastructure with Cloudformation
# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main
#       - feature/*

# env:
#   AWS_REGION: ${{ vars.AWS_REGION }}
#   AWS_PREPROD_ACCOUNT_NUMBER: ${{ secrets.AWS_PREPROD_ACCOUNT_NUMBER }}
#   AWS_PROD_ACCOUNT_NUMBER: ${{ secrets.AWS_PROD_ACCOUNT_NUMBER }}
#   SAGEMAKER_PROJECT_ARN: ${{ vars.SAGEMAKER_PROJECT_ARN }}
#   SAGEMAKER_PROJECT_ID: ${{ vars.SAGEMAKER_PROJECT_ID }}
#   SAGEMAKER_PROJECT_NAME_ID: ${{ vars.SAGEMAKER_PROJECT_NAME_ID }}
#   SAGEMAKER_PROJECT_NAME: ${{ vars.SAGEMAKER_PROJECT_NAME }}
#   AWS_DEV_ACCOUNT_NUMBER: ${{ secrets.AWS_DEV_ACCOUNT_NUMBER }}
#   IAC_CODE: "cfn"

# jobs:
#   preprod:
#     name: Deploy Inference Infra to PreProd Account
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - name: Git Checkout
#         uses: actions/checkout@v3

#       - name: Install requirements
#         run: |
#           pip3 install --upgrade boto3 awscliv2

#       - name: Assume AWS Dev Account Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::${{ env.AWS_DEV_ACCOUNT_NUMBER }}:role/aws-github-oidc-role
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Save AWS profile for dev account
#         run: |
#           aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile dev
#           aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile dev
#           aws configure set aws_session_token $AWS_SESSION_TOKEN --profile dev

#       - name: Assume AWS PreProd Account Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::${{ env.AWS_PREPROD_ACCOUNT_NUMBER }}:role/aws-github-oidc-role
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Save AWS profile for target account (preprod)
#         run: |
#           aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile target
#           aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile target
#           aws configure set aws_session_token $AWS_SESSION_TOKEN --profile target

#       - name: Deploy to target account
#         run: |
#           python3 build.py \
#             --sagemaker-project-name "$SAGEMAKER_PROJECT_NAME"  \
#             --sagemaker-project-id "$SAGEMAKER_PROJECT_ID" --model-package-group-name "$SAGEMAKER_PROJECT_NAME_ID" \
#             --stage staging --training-id "$AWS_DEV_ACCOUNT_NUMBER" \
#             --target-id "$AWS_PREPROD_ACCOUNT_NUMBER" --environment preprod --code "$IAC_CODE"\
#             --import-config cloud_formation/pre-prod-config.json --export-config config-export.json

#           aws cloudformation deploy --template-file cloud_formation/endpoint-config-template.yml \
#             --stack-name "${SAGEMAKER_PROJECT_NAME}-staging-endpoint" \
#             --parameter-overrides file://config-export.json \
#             --profile target

#       - name: Test target account deployment
#         run: |
#           python3 test/test.py --endpoint-name "${SAGEMAKER_PROJECT_NAME}-preprod" --export-test-results test-results
#           cat test-results
#   prod:
#     name: Deploy Inference Infra to Prod Account
#     runs-on: ubuntu-latest
#     needs: [preprod]
#     environment: production
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - name: Git Checkout
#         uses: actions/checkout@v3

#       - name: Install requirements
#         run: |
#           pip3 install --upgrade boto3 awscliv2

#       - name: Assume AWS Dev Account Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::${{ env.AWS_DEV_ACCOUNT_NUMBER }}:role/aws-github-oidc-role
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Save AWS profile for dev account
#         run: |
#           aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile dev
#           aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile dev
#           aws configure set aws_session_token $AWS_SESSION_TOKEN --profile dev

#       - name: Assume AWS Prod Account Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::${{ env.AWS_PROD_ACCOUNT_NUMBER }}:role/aws-github-oidc-role
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Save AWS profile for target account (prod)
#         run: |
#           aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile target
#           aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile target
#           aws configure set aws_session_token $AWS_SESSION_TOKEN --profile target

#       - name: Deploy to target account
#         run: |
#           python3 build.py \
#             --sagemaker-project-name "$SAGEMAKER_PROJECT_NAME"  \
#             --sagemaker-project-id "$SAGEMAKER_PROJECT_ID" --model-package-group-name "$SAGEMAKER_PROJECT_NAME_ID" \
#             --stage prod --training-id "$AWS_DEV_ACCOUNT_NUMBER" \
#             --target-id "$AWS_PROD_ACCOUNT_NUMBER" --environment prod --code "$IAC_CODE"\
#             --import-config cloud_formation/prod-config.json --export-config config-export.json

#           aws cloudformation deploy --template-file cloud_formation/endpoint-config-template.yml \
#             --stack-name "${SAGEMAKER_PROJECT_NAME}-prod-endpoint" \
#             --parameter-overrides file://config-export.json \
#             --profile target

#       - name: Test target account deployment
#         run: |
#           python3 test/test.py --endpoint-name "${SAGEMAKER_PROJECT_NAME}-prod" --export-test-results test-results
#           cat test-results
