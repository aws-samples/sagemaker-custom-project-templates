# name: Execute pipeline promotion with CloudFormation
# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main

# env:
#   ARTIFACT_BUCKET: ${{ vars.ARTIFACT_BUCKET }}
#   AWS_REGION: ${{ vars.AWS_REGION }}
#   AWS_DEV_ACCOUNT_NUMBER: ${{ secrets.AWS_DEV_ACCOUNT_NUMBER }}
#   AWS_PREPROD_ACCOUNT_NUMBER: ${{ secrets.AWS_PREPROD_ACCOUNT_NUMBER }}
#   AWS_PROD_ACCOUNT_NUMBER: ${{ secrets.AWS_PROD_ACCOUNT_NUMBER }}
#   SAGEMAKER_PIPELINE_ROLE_ARN: ${{ vars.SAGEMAKER_PIPELINE_ROLE_ARN }}
#   SAGEMAKER_PROJECT_ARN: ${{ vars.SAGEMAKER_PROJECT_ARN }}
#   SAGEMAKER_PROJECT_ID: ${{ vars.SAGEMAKER_PROJECT_ID }}
#   SAGEMAKER_PROJECT_NAME_ID: ${{ vars.SAGEMAKER_PROJECT_NAME_ID }}
#   SAGEMAKER_PROJECT_NAME: ${{ vars.SAGEMAKER_PROJECT_NAME }}
#   S3_PREFIX: "terraform-state"
#   DYNAMODB_PREFIX: "terraform-state-locks"
#   IAC_CODE: "cfn"

# jobs:
#   dev:
#     name: Update and run ML Pipeline
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - name: Git Checkout
#         uses: actions/checkout@v3

#       - name: Get Env Variables
#         run: env

#       - name: Assume AWS OIDC IAM Role dev
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::${{ env.AWS_DEV_ACCOUNT_NUMBER }}:role/aws-github-oidc-role
#           aws-region: ${{ env.AWS_REGION }}
      # - name: Install requirements
      #   run: |
      #     pip3 install --upgrade . awscliv2

#       - name: SageMaker Pipeline
#         run: |
#           export PYTHONUNBUFFERED=TRUE
#           status=`run-pipeline --module-name pipelines.batch_inference.pipeline \
#           --role-arn "$SAGEMAKER_PIPELINE_ROLE_ARN" \
#           --tags "[{\"Key\":\"sagemaker:project-name\", \"Value\":\"${SAGEMAKER_PROJECT_NAME}\"}, {\"Key\":\"sagemaker:project-id\", \"Value\":\"${SAGEMAKER_PROJECT_ID}\"}]" \
#           --kwargs "{\"region\":\"${AWS_REGION}\",\"environment\":\"dev\",\"account_id\":\"${AWS_DEV_ACCOUNT_NUMBER}\",\"role\":\"${SAGEMAKER_PIPELINE_ROLE_ARN}\",\"default_bucket\":\"${ARTIFACT_BUCKET}\",\"pipeline_name\":\"${SAGEMAKER_PROJECT_NAME_ID}\",\"model_package_group_name\":\"${SAGEMAKER_PROJECT_NAME_ID}\",\"base_job_prefix\":\"${SAGEMAKER_PROJECT_NAME_ID}\",\"project_name\":\"${SAGEMAKER_PROJECT_NAME}\"}"`
#           rc=$?
#           echo $status
#           [ $rc -eq 0 ] && echo "Pipeline ran successfully." || echo "Pipeline failed or stopped."
#         env:
#           SAGEMAKER_PIPELINE_ROLE_ARN: ${{ vars.SAGEMAKER_PIPELINE_ROLE_ARN }}
        

#   preprod:
    
#     name: Deploy Inference Infra to PreProd Account
#     runs-on: ubuntu-latest
#     needs: [dev]
#     environment: pre-production
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - uses: actions/checkout@v3
#       - uses: hashicorp/setup-terraform@v2
#         with: 
#           terraform_version: 1.5.2
#       - name: Install requirements
#         run: |
#           pip3 install --upgrade boto3 awscliv2 sagemaker
#       - name: Assume AWS PreProd Account Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::${{ env.AWS_PREPROD_ACCOUNT_NUMBER }}:role/aws-github-oidc-role
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Save AWS profile for target account (preprod)
#         run: |
#           aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile target
#           aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile target
#           aws configure set aws_session_token $AWS_SESSION_TOKEN --profile target

#       - name: Deploy to target account
#         run: |
#           python3 deploy_target/build.py \
#             --sagemaker-project-name "$SAGEMAKER_PROJECT_NAME"  --region "$AWS_REGION" \
#             --sagemaker-project-id "$SAGEMAKER_PROJECT_ID" --model-package-group-name "$SAGEMAKER_PROJECT_NAME_ID" \
#             --stage staging \
#             --target-id "$AWS_PREPROD_ACCOUNT_NUMBER" --environment preprod --code "$IAC_CODE"\
#             --import-config deploy_target/cloud_formation/pre-prod-config.json \
#             --export-config config-export.json

#           aws cloudformation deploy --template-file deploy_target/cloud_formation/batch-config-template.yml \
#             --stack-name "${SAGEMAKER_PROJECT_NAME}-preprod-workflow" \
#             --parameter-overrides file://config-export.json \
#             --profile target

#   prod:
#     name: Deploy Inference Infra to Prod Account
#     runs-on: ubuntu-latest
#     needs: [preprod]
#     environment: production
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - uses: actions/checkout@v3
#       - uses: hashicorp/setup-terraform@v2
#         with: 
#           terraform_version: 1.5.2

#       - name: Install requirements
#         run: |
#           pip3 install --upgrade boto3 awscliv2 sagemaker

#       - name: Assume AWS Prod Account Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::${{ env.AWS_PROD_ACCOUNT_NUMBER }}:role/aws-github-oidc-role
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Save AWS profile for target account (prod)
#         run: |
#           aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile target
#           aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile target
#           aws configure set aws_session_token $AWS_SESSION_TOKEN --profile target

#       - name: Deploy to target account
#         run: |
#           python3 deploy_target/build.py \
#             --sagemaker-project-name "$SAGEMAKER_PROJECT_NAME"  --region "$AWS_REGION" \
#             --sagemaker-project-id "$SAGEMAKER_PROJECT_ID" --model-package-group-name "$SAGEMAKER_PROJECT_NAME_ID" \
#             --stage prod \
#             --target-id "$AWS_PROD_ACCOUNT_NUMBER" --environment prod --code "$IAC_CODE"\
#             --import-config deploy_target/cloud_formation/prod-config.json --export-config config-export.json

#           aws cloudformation deploy --template-file deploy_target/cloud_formation/batch-config-template.yml \
#             --stack-name "${SAGEMAKER_PROJECT_NAME}-prod-workflow" \
#             --parameter-overrides file://config-export.json \
#             --profile target


