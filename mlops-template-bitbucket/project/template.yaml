Description: Toolchain template which provides the resources needed to represent infrastructure as code. The template creates 2 source control repositories in Bitbucket and creates a CI/CD pipeline using Bitbucket Pipeline to build a model using a SageMaker Pipeline and deploy the resulting trained ML Model from Model Registry to two stages in CD -- staging and production.

Parameters:
  SageMakerProjectName:
    Type: String
    Description: Name of the project
    NoEcho: true
    MinLength: 1
    MaxLength: 32
    AllowedPattern: ^[a-zA-Z](-*[a-zA-Z0-9])*

  SageMakerProjectId:
    Type: String
    NoEcho: true
    Description: Service generated ID of the project.

  ModelBuildCodeRepositoryName:
    Type: String
    MaxLength: 1024
    Description: Repository name of the Model Building and Training Code Repository

  ModelDeployCodeRepositoryName:
    Type: String
    MaxLength: 1024
    Description: Repository name of the Model Deplyment Code Repository
  
  WorkspaceName:
    Type: String
    MaxLength: 1024
    Description: The name of the workspace in Bitbucket to create the repositories in.
  
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Code Repository Info"
        Parameters:
          - ModelBuildCodeRepositoryName
          - ModelDeployCodeRepositoryName
          - WorkspaceName
        
    ParameterLabels:
      ModelBuildCodeRepositoryName:
        default: "Model Build Repository Name"
      ModelDeployCodeRepositoryName:
        default: "Model Deploy Repository Name"
      WorkspaceName:
        default: "Bitbucket Workspace name."

Resources:
  MlOpsArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub sagemaker-project-${SageMakerProjectId} # 58 chars max/ 64 allowed

  GitSeedCodeCheckinLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: To trigger the codebuild project for the seedcode checkin
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      FunctionName: !Sub sagemaker-${SageMakerProjectId}-git-seedcodecheckin # max: 10+15+19=44 out of 64 max
      Timeout: 600
      Role: AWSDEFAULT___USE_ROLE___
      Code:
        S3Bucket: AWSDEFAULT___CODE_STAGING_BUCKET___
        S3Key: AWSDEFAULT___PROJECT_NAME___/seedcode/lambda-seedcode-checkin-bitbucket.zip
      Environment:
        Variables:
          BitbucketServer: AWSDEFAULT___BITBUCKET_SERVER_URI___
          WorkspaceName: !Sub ${WorkspaceName}
          DeployProjectName: !Sub ${ModelDeployCodeRepositoryName}
          BuildProjectName: !Sub ${ModelBuildCodeRepositoryName}
          SageMakerProjectName: !Sub ${SageMakerProjectName}
          SageMakerProjectId: !Sub ${SageMakerProjectId}
          BitbucketUsernameSecretName: AWSDEFAULT___BITBUCKET_USERNAME_TOKEN_SECRET_NAME___
          BitbucketAppPasswordSecretName: AWSDEFAULT___BITBUCKET_APP_PASSWORD_TOKEN_SECRET_NAME___
          IAMAccessKeySecretName: AWSDEFAULT___IAM_ACCESS_KEY_SECRET_NAME___
          IAMSecretKeySecretName: AWSDEFAULT___IAM_SECRET_KEY_SECRET_NAME___
          SeedCodeBucket: AWSDEFAULT___CODE_STAGING_BUCKET___
          ModelBuildSeedCode: AWSDEFAULT___PROJECT_NAME___/seedcode/mlops-bitbucket-project-seedcode-model-build.zip
          ModelDeploySeedCode: AWSDEFAULT___PROJECT_NAME___/seedcode/mlops-bitbucket-project-seedcode-model-deploy.zip
          Region: !Ref AWS::Region
          AccountId: !Ref AWS::AccountId
          Role: AWSDEFAULT___USE_ROLE___

  SageMakerSeedCodeCheckinLambdaInvoker:
    Type: 'AWS::CloudFormation::CustomResource'
    Properties:
      ServiceToken: !GetAtt GitSeedCodeCheckinLambda.Arn

  ### Lambda function to start Bitbucket CI/CD Pipeline
  BitbucketPipelineTriggerLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: To trigger the Bitbucket Pipeline
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      FunctionName: !Sub sagemaker-${SageMakerProjectId}-bitbucket-trigger # max: 10+15+19=44 out of 64 max
      Timeout: 600
      Role: AWSDEFAULT___USE_ROLE___
      Code:
        S3Bucket: AWSDEFAULT___CODE_STAGING_BUCKET___
        S3Key: AWSDEFAULT___PROJECT_NAME___/seedcode/lambda-bitbucket-pipeline-trigger.zip
      Environment:
        Variables:
          BitbucketServer: AWSDEFAULT___BITBUCKET_SERVER_URI___
          DeployProjectName: !Sub ${ModelDeployCodeRepositoryName}-${SageMakerProjectName}
          BuildProjectName: !Sub ${ModelBuildCodeRepositoryName}-${SageMakerProjectName}
          BitbucketUsernameSecretName: AWSDEFAULT___BITBUCKET_USERNAME_TOKEN_SECRET_NAME___
          BitbucketAppPasswordSecretName: AWSDEFAULT___BITBUCKET_APP_PASSWORD_TOKEN_SECRET_NAME___
          Region: !Ref AWS::Region
          WorkspaceName: !Sub ${WorkspaceName}
  
  SageMakerModelPackageGroupName:
    Type: AWS::SageMaker::ModelPackageGroup
    Properties: 
      ModelPackageGroupName: !Sub ${SageMakerProjectName}-${SageMakerProjectId}
      Tags:
        - Key: "sagemaker:project-id"
          Value: !Sub ${SageMakerProjectId}
        - Key: "sagemaker:project-name"
          Value: !Sub ${SageMakerProjectName}

  ModelDeploySageMakerEventRule:
    Type: AWS::Events::Rule
    Properties:
      # Max length allowed: 64
      Name: !Sub sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-event-rule # max: 10+33+15+5=63 chars
      Description: "Rule to trigger a deployment when SageMaker Model registry is updated with a new model package. For example, a new model package is registered with Registry"
      EventPattern:
        source:
          - "aws.sagemaker"
        detail-type:
          - "SageMaker Model Package State Change"
        detail:
          ModelPackageGroupName:
            - !Sub ${SageMakerProjectName}-${SageMakerProjectId}
          ModelApprovalStatus:
            - Approved
      State: "ENABLED"
      Targets:
        -
          Arn: !GetAtt BitbucketPipelineTriggerLambda.Arn
          Id: !Sub sagemaker-${SageMakerProjectName}-trigger
  
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !GetAtt BitbucketPipelineTriggerLambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ModelDeploySageMakerEventRule.Arn

  ModelDeploySagemakerCodeRepository:
    Type: 'AWS::SageMaker::CodeRepository'
    DependsOn: SageMakerSeedCodeCheckinLambdaInvoker
    Properties:
      CodeRepositoryName: !Sub ${ModelDeployCodeRepositoryName}-${SageMakerProjectId}
      GitConfig:
        Branch: main
        RepositoryUrl: !GetAtt SageMakerSeedCodeCheckinLambdaInvoker.deploy_repo_url
      Tags:
        - Key: "sagemaker:project-id"
          Value: !Sub ${SageMakerProjectId}
        - Key: "sagemaker:project-name"
          Value: !Sub ${SageMakerProjectName}

  ModelBuildSagemakerCodeRepository:
    Type: 'AWS::SageMaker::CodeRepository'
    DependsOn: SageMakerSeedCodeCheckinLambdaInvoker
    Properties:
      CodeRepositoryName: !Sub ${ModelBuildCodeRepositoryName}-${SageMakerProjectId}
      GitConfig:
        Branch: main
        RepositoryUrl: !GetAtt SageMakerSeedCodeCheckinLambdaInvoker.build_repo_url
      Tags:
        - Key: "sagemaker:project-id"
          Value: !Sub ${SageMakerProjectId}
        - Key: "sagemaker:project-name"
          Value: !Sub ${SageMakerProjectName}